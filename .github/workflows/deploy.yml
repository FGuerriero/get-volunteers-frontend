# Copyright (c) 2025 Fernando Guerriero Cardoso da Silva.
# Created Date: Tue Sep 04 2025
# SPDX-License-Identifier: MIT

name: Deploy GetVolunteers frontend with Docker to Oracle Cloud VM

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get lowercase repository name
        id: get_repo_name
        run: echo "repo_name=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT && echo "repo_name=${GITHUB_REPOSITORY,,}"

      - name: Build and Push Docker image to GHCR
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ghcr.io/${{ steps.get_repo_name.outputs.repo_name }}:latest

      - name: Deploy with SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} -p ${{ secrets.GHCR_TOKEN }}

            # Stop and remove current container (if exists)
            docker stop get-volunteers-frontend || true
            docker rm get-volunteers-frontend || true

            # Pull the most recent image from GHCR
            docker pull ghcr.io/${{ secrets.GHCR_USERNAME }}/${{ steps.get_repo_name.outputs.repo_name }}:latest

            # Execute the container with the new image
            docker run -d --restart=unless-stopped --name get-volunteers-frontend -p 3000:3000 \
            -e NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }} \
            ghcr.io/${{ secrets.GHCR_USERNAME }}/${{ steps.get_repo_name.outputs.repo_name }}:latest

            # Clean old Docker images to save storage
            docker image prune -f
